/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.1.x                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
// General macros to create 2D/extruded-2D meshes
// Usage:
//	m4 -I /usr/share/doc/m4/examples < blockMeshDictPrototype.m4 > blockMeshDict.m4
//	m4 < blockMeshDict.m4 > blockMeshDict
//
//	added arc edges between aerator and column; points ih*
























// # code duplication necessary - damn the meta programming






//define(testQuad, ($1$2 $1$3 $1[]incr($3) $1[]eval($2+4)))

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
// * * *			I N P U T   S E C T I O N						   * * * //
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;
































 // magic factor, column center edge radius









 // TODO: correct values














// vertical







// tangential


// radial





// DEFINE CO-ORDINATES +++ automagic

// # center




























































































































// # center edges






















































































// # outside




























































































































// # outside edges


























































































// DEFINE VERTICES +++ automagic
// # changequote([,])











vertices
(
    // outside


    (0.03 0.0 -0.1) // Vertex o0 = 0  
    (0.0 0.03 -0.1) // Vertex o1 = 1  
    (-0.03 0.0 -0.1) // Vertex o2 = 2  
    (0.0 -0.03 -0.1) // Vertex o3 = 3  


    (0.03 0.0 0.0) // Vertex o4 = 4  
    (0.0 0.03 0.0) // Vertex o5 = 5  
    (-0.03 0.0 0.0) // Vertex o6 = 6  
    (0.0 -0.03 0.0) // Vertex o7 = 7  


    (0.02 0.0 0.05) // Vertex o8 = 8  
    (0.0 0.02 0.05) // Vertex o9 = 9  
    (-0.02 0.0 0.05) // Vertex o10 = 10  
    (0.0 -0.02 0.05) // Vertex o11 = 11  


    (0.02 0.0 0.15) // Vertex o12 = 12  
    (0.0 0.02 0.15) // Vertex o13 = 13  
    (-0.02 0.0 0.15) // Vertex o14 = 14  
    (0.0 -0.02 0.15) // Vertex o15 = 15  


    (0.02 0.0 0.2) // Vertex o16 = 16  
    (0.0 0.02 0.2) // Vertex o17 = 17  
    (-0.02 0.0 0.2) // Vertex o18 = 18  
    (0.0 -0.02 0.2) // Vertex o19 = 19  


    (0.02 0.0 0.3) // Vertex o20 = 20  
    (0.0 0.02 0.3) // Vertex o21 = 21  
    (-0.02 0.0 0.3) // Vertex o22 = 22  
    (0.0 -0.02 0.3) // Vertex o23 = 23  


// outside edges


    (0.0212132034355964 0.0212132034355964 -0.1) // Vertex eo0 = 24  
    (-0.0212132034355964 0.0212132034355964 -0.1) // Vertex eo1 = 25  
    (-0.0212132034355964 -0.0212132034355964 -0.1) // Vertex eo2 = 26  
    (0.0212132034355964 -0.0212132034355964 -0.1) // Vertex eo3 = 27  


    (0.0212132034355964 0.0212132034355964 0.0) // Vertex eo4 = 28  
    (-0.0212132034355964 0.0212132034355964 0.0) // Vertex eo5 = 29  
    (-0.0212132034355964 -0.0212132034355964 0.0) // Vertex eo6 = 30  
    (0.0212132034355964 -0.0212132034355964 0.0) // Vertex eo7 = 31  


    (0.0141421356237309 0.0141421356237309 0.05) // Vertex eo8 = 32  
    (-0.0141421356237309 0.0141421356237309 0.05) // Vertex eo9 = 33  
    (-0.0141421356237309 -0.0141421356237309 0.05) // Vertex eo10 = 34  
    (0.0141421356237309 -0.0141421356237309 0.05) // Vertex eo11 = 35  


    (0.0141421356237309 0.0141421356237309 0.15) // Vertex eo12 = 36  
    (-0.0141421356237309 0.0141421356237309 0.15) // Vertex eo13 = 37  
    (-0.0141421356237309 -0.0141421356237309 0.15) // Vertex eo14 = 38  
    (0.0141421356237309 -0.0141421356237309 0.15) // Vertex eo15 = 39  


    (0.0141421356237309 0.0141421356237309 0.2) // Vertex eo16 = 40  
    (-0.0141421356237309 0.0141421356237309 0.2) // Vertex eo17 = 41  
    (-0.0141421356237309 -0.0141421356237309 0.2) // Vertex eo18 = 42  
    (0.0141421356237309 -0.0141421356237309 0.2) // Vertex eo19 = 43  


    (0.0141421356237309 0.0141421356237309 0.3) // Vertex eo20 = 44  
    (-0.0141421356237309 0.0141421356237309 0.3) // Vertex eo21 = 45  
    (-0.0141421356237309 -0.0141421356237309 0.3) // Vertex eo22 = 46  
    (0.0141421356237309 -0.0141421356237309 0.3) // Vertex eo23 = 47  


	// center


    (0.018 0.0 -0.1) // Vertex c0 = 48  
    (0.0 0.018 -0.1) // Vertex c1 = 49  
    (-0.018 0.0 -0.1) // Vertex c2 = 50  
    (0.0 -0.018 -0.1) // Vertex c3 = 51  


    (0.018 0.0 0.0) // Vertex c4 = 52  
    (0.0 0.018 0.0) // Vertex c5 = 53  
    (-0.018 0.0 0.0) // Vertex c6 = 54  
    (0.0 -0.018 0.0) // Vertex c7 = 55  


    (0.012 0.0 0.05) // Vertex c8 = 56  
    (0.0 0.012 0.05) // Vertex c9 = 57  
    (-0.012 0.0 0.05) // Vertex c10 = 58  
    (0.0 -0.012 0.05) // Vertex c11 = 59  


    (0.012 0.0 0.15) // Vertex c12 = 60  
    (0.0 0.012 0.15) // Vertex c13 = 61  
    (-0.012 0.0 0.15) // Vertex c14 = 62  
    (0.0 -0.012 0.15) // Vertex c15 = 63  


    (0.012 0.0 0.2) // Vertex c16 = 64  
    (0.0 0.012 0.2) // Vertex c17 = 65  
    (-0.012 0.0 0.2) // Vertex c18 = 66  
    (0.0 -0.012 0.2) // Vertex c19 = 67  


    (0.012 0.0 0.3) // Vertex c20 = 68  
    (0.0 0.012 0.3) // Vertex c21 = 69  
    (-0.012 0.0 0.3) // Vertex c22 = 70  
    (0.0 -0.012 0.3) // Vertex c23 = 71  

	
	// center endges


    (0.018 0.0 -0.1) // Vertex ec0 = 72  
    (0.0 0.018 -0.1) // Vertex ec1 = 73  
    (-0.018 0.0 -0.1) // Vertex ec2 = 74  
    (0.0 -0.018 -0.1) // Vertex ec3 = 75  


    (0.018 0.0 0.0) // Vertex ec4 = 76  
    (0.0 0.018 0.0) // Vertex ec5 = 77  
    (-0.018 0.0 0.0) // Vertex ec6 = 78  
    (0.0 -0.018 0.0) // Vertex ec7 = 79  


    (0.012 0.0 0.05) // Vertex ec8 = 80  
    (0.0 0.012 0.05) // Vertex ec9 = 81  
    (-0.012 0.0 0.05) // Vertex ec10 = 82  
    (0.0 -0.012 0.05) // Vertex ec11 = 83  


    (0.012 0.0 0.15) // Vertex ec12 = 84  
    (0.0 0.012 0.15) // Vertex ec13 = 85  
    (-0.012 0.0 0.15) // Vertex ec14 = 86  
    (0.0 -0.012 0.15) // Vertex ec15 = 87  


    (0.012 0.0 0.2) // Vertex ec16 = 88  
    (0.0 0.012 0.2) // Vertex ec17 = 89  
    (-0.012 0.0 0.2) // Vertex ec18 = 90  
    (0.0 -0.012 0.2) // Vertex ec19 = 91  


    (0.012 0.0 0.3) // Vertex ec20 = 92  
    (0.0 0.012 0.3) // Vertex ec21 = 93  
    (-0.012 0.0 0.3) // Vertex ec22 = 94  
    (0.0 -0.012 0.3) // Vertex ec23 = 95  


);

blocks
(
    // center
    
    hex ( 48 49 50 51 52 53 54 55  ) (5 5 29) simpleGrading (1 1 1)
    hex ( 52 53 54 55 56 57 58 59  ) (5 5 14) simpleGrading (1 1 1)
    hex ( 56 57 58 59 60 61 62 63  ) (5 5 29) simpleGrading (1 1 1)
    hex ( 60 61 62 63 64 65 66 67  ) (5 5 14) simpleGrading (1 1 1)
    hex ( 64 65 66 67 68 69 70 71  ) (5 5 29) simpleGrading (1 1 1)
    
    // outside
    
    
    hex (48 0 1 49 52 4 5 53) (2 5 29) simpleGrading (1 1 1)
    hex (49 1 2 50 53 5 6 54) (2 5 29) simpleGrading (1 1 1)
    hex (50 2 3 51 54 6 7 55) (2 5 29) simpleGrading (1 1 1)
    hex (51 3 0 48 55 7 4 52) (2 5 29) simpleGrading (1 1 1)
    
    hex (52 4 5 53 56 8 9 57) (2 5 14) simpleGrading (1 1 1)
    hex (53 5 6 54 57 9 10 58) (2 5 14) simpleGrading (1 1 1)
    hex (54 6 7 55 58 10 11 59) (2 5 14) simpleGrading (1 1 1)
    hex (55 7 4 52 59 11 8 56) (2 5 14) simpleGrading (1 1 1)
    
    hex (56 8 9 57 60 12 13 61) (2 5 29) simpleGrading (1 1 1)
    hex (57 9 10 58 61 13 14 62) (2 5 29) simpleGrading (1 1 1)
    hex (58 10 11 59 62 14 15 63) (2 5 29) simpleGrading (1 1 1)
    hex (59 11 8 56 63 15 12 60) (2 5 29) simpleGrading (1 1 1)
    
    hex (60 12 13 61 64 16 17 65) (2 5 14) simpleGrading (1 1 1)
    hex (61 13 14 62 65 17 18 66) (2 5 14) simpleGrading (1 1 1)
    hex (62 14 15 63 66 18 19 67) (2 5 14) simpleGrading (1 1 1)
    hex (63 15 12 60 67 19 16 64) (2 5 14) simpleGrading (1 1 1)
    
    hex (64 16 17 65 68 20 21 69) (2 5 29) simpleGrading (1 1 1)
    hex (65 17 18 66 69 21 22 70) (2 5 29) simpleGrading (1 1 1)
    hex (66 18 19 67 70 22 23 71) (2 5 29) simpleGrading (1 1 1)
    hex (67 19 16 64 71 23 20 68) (2 5 29) simpleGrading (1 1 1)

);

edges
(
	// center
	
	
	arc 48 49 (0.0101183766184074 0.0101183766184074 -0.1)
	arc 49 50 (-0.0101183766184074 0.0101183766184074 -0.1)
	arc 50 51 (-0.0101183766184074 -0.0101183766184074 -0.1)
	arc 51 48 (0.0101183766184074 -0.0101183766184074 -0.1)
	
	arc 52 53 (0.0101183766184074 0.0101183766184074 0.0)
	arc 53 54 (-0.0101183766184074 0.0101183766184074 0.0)
	arc 54 55 (-0.0101183766184074 -0.0101183766184074 0.0)
	arc 55 52 (0.0101183766184074 -0.0101183766184074 0.0)
	
	arc 56 57 (0.00674558441227157 0.00674558441227157 0.05)
	arc 57 58 (-0.00674558441227157 0.00674558441227157 0.05)
	arc 58 59 (-0.00674558441227157 -0.00674558441227157 0.05)
	arc 59 56 (0.00674558441227157 -0.00674558441227157 0.05)
	
	arc 60 61 (0.00674558441227157 0.00674558441227157 0.15)
	arc 61 62 (-0.00674558441227157 0.00674558441227157 0.15)
	arc 62 63 (-0.00674558441227157 -0.00674558441227157 0.15)
	arc 63 60 (0.00674558441227157 -0.00674558441227157 0.15)
	
	arc 64 65 (0.00674558441227157 0.00674558441227157 0.2)
	arc 65 66 (-0.00674558441227157 0.00674558441227157 0.2)
	arc 66 67 (-0.00674558441227157 -0.00674558441227157 0.2)
	arc 67 64 (0.00674558441227157 -0.00674558441227157 0.2)
	
	arc 68 69 (0.00674558441227157 0.00674558441227157 0.3)
	arc 69 70 (-0.00674558441227157 0.00674558441227157 0.3)
	arc 70 71 (-0.00674558441227157 -0.00674558441227157 0.3)
	arc 71 68 (0.00674558441227157 -0.00674558441227157 0.3)
	
	// outside
	
	
	arc 0 1 (0.0212132034355964 0.0212132034355964 -0.1)
	arc 1 2 (-0.0212132034355964 0.0212132034355964 -0.1)
	arc 2 3 (-0.0212132034355964 -0.0212132034355964 -0.1)
	arc 3 0 (0.0212132034355964 -0.0212132034355964 -0.1)
	
	arc 4 5 (0.0212132034355964 0.0212132034355964 0.0)
	arc 5 6 (-0.0212132034355964 0.0212132034355964 0.0)
	arc 6 7 (-0.0212132034355964 -0.0212132034355964 0.0)
	arc 7 4 (0.0212132034355964 -0.0212132034355964 0.0)
	
	arc 8 9 (0.0141421356237309 0.0141421356237309 0.05)
	arc 9 10 (-0.0141421356237309 0.0141421356237309 0.05)
	arc 10 11 (-0.0141421356237309 -0.0141421356237309 0.05)
	arc 11 8 (0.0141421356237309 -0.0141421356237309 0.05)
	
	arc 12 13 (0.0141421356237309 0.0141421356237309 0.15)
	arc 13 14 (-0.0141421356237309 0.0141421356237309 0.15)
	arc 14 15 (-0.0141421356237309 -0.0141421356237309 0.15)
	arc 15 12 (0.0141421356237309 -0.0141421356237309 0.15)
	
	arc 16 17 (0.0141421356237309 0.0141421356237309 0.2)
	arc 17 18 (-0.0141421356237309 0.0141421356237309 0.2)
	arc 18 19 (-0.0141421356237309 -0.0141421356237309 0.2)
	arc 19 16 (0.0141421356237309 -0.0141421356237309 0.2)
	
	arc 20 21 (0.0141421356237309 0.0141421356237309 0.3)
	arc 21 22 (-0.0141421356237309 0.0141421356237309 0.3)
	arc 22 23 (-0.0141421356237309 -0.0141421356237309 0.3)
	arc 23 20 (0.0141421356237309 -0.0141421356237309 0.3)

);





boundary
(
    bottom
    {
        type patch;
        faces
        (
            (48 51 50 49)
            
            (49 1 0 48)
            (50 2 1 49)
            (51 3 2 50)
            (48 0 3 51)
        );
    }
    
    top
    {
        type patch;
        faces
        (
            (68 69 70 71)
            
            (68 20 21 69)
            (69 21 22 70)
            (70 22 23 71)
            (71 23 20 68)
        );
    }
    
    
    walls
    {
        type wall;
        faces
        (
            
            (0 1 5 4)
            (1 2 6 5)
            (2 3 7 6)
            
            (3 0 4 7)
            
            
            (4 5 9 8)
            (5 6 10 9)
            (6 7 11 10)
            
            (7 4 8 11)
            
            
            (8 9 13 12)
            (9 10 14 13)
            (10 11 15 14)
            
            (11 8 12 15)
            
            
            (12 13 17 16)
            (13 14 18 17)
            (14 15 19 18)
            
            (15 12 16 19)
            
            
            (16 17 21 20)
            (17 18 22 21)
            (18 19 23 22)
            
            (19 16 20 23)
            
            
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //















